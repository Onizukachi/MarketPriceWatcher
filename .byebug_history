exit
product
exit
product
exit
price = size["price"]["product"]
 size = product["sizes"].find { |row| row["optionId"] == url_params[:size] }
url_params
exit
exity
@id
id
exit
url[/(?<=catalog\/)\d+(?=\/)/]
id
product = body["data"]["products"].find { |row| row["id"] == id }
size = product["sizes"].find { |row| row["optionId"] == size }
url
exit
size
url
size["price"]["product"]
    size = product["sizes"].find { |row| row["optionId"] == url_params[:size] }
url_params[:size]
title = product["name"]
total_quantity = product["totalQuantity"]
id = product["id"]
url_params[:id] 
product
exit
url_params
url_params[:size]
     product
 product = scraper.get_product_details
scraper = MarketPriceWatcher::ScraperFactory.create(message.text)
MarketPriceWatcher::ScraperFactory.create(message.text)
message.text
product_repository.list.to_a
product_repository.list
exit
file
exit
require_relative 'lib/market_price_watcher/migrations/01_create_users.sql'
require_relative 'lib/market_price_watcher/migrations/create_users.sql'
require_relative 'lib/migrations/create_users.sql'
require_relative 'lib./migrations/create_users.sql'
require_relative './migrations/create_users.sql'
require_relative '/migrations/create_users.sql'
exit
File.read("./lib/migrations/01_create_users.sql")
File.p
File.read("./lib/migrations/01_create_users.sql")
File.read("./migrations/01_create_users.sql")
exit
exit)
Dir.glob("#{__dir__}/repositories/**/*_repository.rb").each(&method(:require))
Dir.glob("#{__dir__}/repositories/**/*_repository.rb")
exit
File.read("e./migrations/01_create_users.sql")
File.read("./migrations/01_create_users.sql")
__dir__
Dir.glob("#{__dir__}#{path}/*.sql")
path = './migrations/'
Dir.glob(File.join(__dir__, "migrations", "*.sql")).sort
__dir__
{__dir__
Dir.glob("#{__dir__}#{path}/*.sql")
Dir.pwd
Dir.glob("./migrations/*.sql").sort
Dir.glob("#{path}/*.sql").sort
path = "migrations/"
Dir.glob("#{path}/*.sql").sort
path = "/migrations/"
path
Dir.glob("#{path}/*.sql").sort
exit
product_repository.list
exit
product_repository.list
product_repository
